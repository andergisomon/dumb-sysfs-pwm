on:
  push: # Run CI for all branches except GitHub merge queue tmp branches
    branches-ignore:
    - "gh-readonly-queue/**"
  pull_request: # Run CI for PRs on any branch
  merge_group: # Run CI for the GitHub merge queue

name: CI

env:
  RUSTFLAGS: '--deny warnings'

jobs:
  ci-linux:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        TARGET:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - armv7-unknown-linux-gnueabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          # - loongarch64-unknown-linux-gnu
          - powerpc-unknown-linux-gnu
          # - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

        include:
          - rust: 1.28.0
            TARGET: x86_64-unknown-linux-gnu

          # Test nightly but don't fail
          - rust: nightly
            TARGET: x86_64-unknown-linux-gnu
            experimental: true

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - run: cargo build --target=${{ matrix.TARGET }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target=${{ matrix.TARGET }}

  ci-linux-msrv:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.28.0

      - run: cargo build
      - run: cargo test

  ci-macos:
    name: CI
    runs-on: macos-11

    strategy:
      matrix:
        rust: [stable, 1.28.0]
        TARGET: [x86_64-apple-darwin]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - run: cargo build --target=${{ matrix.TARGET }}

  checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - run: cargo doc
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: '--allow warnings'
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.84.1
        with:
          components: clippy
      - run: cargo clippy --all-targets
